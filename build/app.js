import {ssr} from "@sveltejs/kit/ssr";
import {create_ssr_component, validate_component, missing_component, escape} from "svelte/internal";
import {setContext, afterUpdate, onMount} from "svelte";
import "svelte/transition";
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}";
const css$2 = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n</script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\tNavigated to {title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {stores} = $$props;
  let {page} = $$props;
  let {components} = $$props;
  let {props_0 = null} = $$props;
  let {props_1 = null} = $$props;
  let {props_2 = null} = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$2);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1j55zn5"}">${navigated ? `Navigated to ${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({head, body}) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.ico" />\n		<link rel="stylesheet" href="/global.css"/>\n		<link rel="preconnect" href="https://fonts.gstatic.com">\n		<link href="https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700&display=swap" rel="stylesheet">\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body class="container">\n		<div class="container" id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
function init(settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-c8afc25a.js",
      css: ["/./_app/assets/start-a8cd1609.css"],
      js: ["/./_app/start-c8afc25a.js", "/./_app/chunks/vendor-826212b7.js", "/./_app/chunks/singletons-6b53f818.js"]
    },
    fetched: void 0,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error) => String(error),
    handle_error: (error) => {
      console.error(error.stack);
      error.stack = options.get_stack(error);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    router: true,
    ssr: true,
    target: "#svelte",
    template
  };
}
const empty = () => ({});
const manifest = {
  assets: [{file: "MinkLogo.svg", size: 3297, type: "image/svg+xml"}, {file: "global.css", size: 235, type: "text/css"}],
  layout: "src/routes/$layout.svelte",
  error: "src/routes/$error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/$layout.svelte", "src/routes/index.svelte"],
      b: ["src/routes/$error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/setup\/?$/,
      params: empty,
      a: ["src/routes/$layout.svelte", "src/routes/setup.svelte"],
      b: ["src/routes/$error.svelte"]
    }
  ]
};
const get_hooks = (hooks) => ({
  getContext: hooks.getContext || (() => ({})),
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({request, render: render2}) => render2(request))
});
const module_lookup = {
  "src/routes/$layout.svelte": () => Promise.resolve().then(function() {
    return $layout$1;
  }),
  "src/routes/$error.svelte": () => Promise.resolve().then(function() {
    return $error$1;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/setup.svelte": () => Promise.resolve().then(function() {
    return setup;
  })
};
const metadata_lookup = {"src/routes/$layout.svelte": {entry: "/./_app/pages/$layout.svelte-6582fa5b.js", css: [], js: ["/./_app/pages/$layout.svelte-6582fa5b.js", "/./_app/chunks/vendor-826212b7.js"], styles: null}, "src/routes/$error.svelte": {entry: "/./_app/pages/$error.svelte-e3bd9c45.js", css: [], js: ["/./_app/pages/$error.svelte-e3bd9c45.js", "/./_app/chunks/vendor-826212b7.js"], styles: null}, "src/routes/index.svelte": {entry: "/./_app/pages/index.svelte-31dc83a5.js", css: ["/./_app/assets/pages/index.svelte-2b7768c4.css"], js: ["/./_app/pages/index.svelte-31dc83a5.js", "/./_app/chunks/vendor-826212b7.js", "/./_app/chunks/singletons-6b53f818.js", "/./_app/chunks/transitionWrapper-0e676377.js"], styles: null}, "src/routes/setup.svelte": {entry: "/./_app/pages/setup.svelte-5baccd4f.js", css: [], js: ["/./_app/pages/setup.svelte-5baccd4f.js", "/./_app/chunks/vendor-826212b7.js", "/./_app/chunks/transitionWrapper-0e676377.js"], styles: null}};
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
init({paths: {base: "", assets: "/."}});
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return ssr({...request, host}, options, {prerender});
}
const $layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<main>${slots.default ? slots.default({}) : ``}</main>`;
});
var $layout$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: $layout
});
const $error = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h1>error page</h1>`;
});
var $error$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: $error
});
var primaryButton_svelte_svelte_type_style_lang = ".primaryButton.svelte-n4cl7g{background:#6E5FB4;color:white;border:none;width:100%;border-radius:1.6rem;font-size:1.2rem;padding:0.7rem 0 0.7rem 0}";
const css$1 = {
  code: ".primaryButton.svelte-n4cl7g{background:#6E5FB4;color:white;border:none;width:100%;border-radius:1.6rem;font-size:1.2rem;padding:0.7rem 0 0.7rem 0}",
  map: `{"version":3,"file":"primaryButton.svelte","sources":["primaryButton.svelte"],"sourcesContent":["<script language=\\"ts\\">\\n    import {goto} from '$app/navigation';\\n    export let message;\\n    export let to;\\n</script>\\n\\n<button on:click={() => goto(to)} class=\\"primaryButton\\">{message}</button>\\n\\n<style>\\n.primaryButton {\\n    background: #6E5FB4;\\n    color: white;\\n    border: none;\\n    width: 100%;\\n    border-radius: 1.6rem;\\n    font-size: 1.2rem;\\n    padding: 0.7rem 0 0.7rem 0;\\n}\\n</style>"],"names":[],"mappings":"AASA,cAAc,cAAC,CAAC,AACZ,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,MAAM,CACrB,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,AAC9B,CAAC"}`
};
const PrimaryButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {message} = $$props;
  let {to} = $$props;
  if ($$props.message === void 0 && $$bindings.message && message !== void 0)
    $$bindings.message(message);
  if ($$props.to === void 0 && $$bindings.to && to !== void 0)
    $$bindings.to(to);
  $$result.css.add(css$1);
  return `<button class="${"primaryButton svelte-n4cl7g"}">${escape(message)}</button>`;
});
const TransitionWrapper = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div>${slots.default ? slots.default({}) : ``}</div>`;
});
var index_svelte_svelte_type_style_lang = ".gridLayout.svelte-1t1svds{display:grid;grid-template-rows:1fr 0.4fr}.gridItem.svelte-1t1svds{grid-column:1}.bottomImage.svelte-1t1svds{align-self:flex-end;margin-bottom:2rem}.bottomArea.svelte-1t1svds{padding:1rem;padding-top:0;gap:1rem;flex-direction:column;align-self:flex-end;margin-bottom:1rem}.topItem.svelte-1t1svds{display:flex;align-items:center;justify-content:center}.wText.svelte-1t1svds{font-weight:400}.wSub.svelte-1t1svds{color:#838383;text-align:center;width:100%;max-width:80%}.buttonLabel.svelte-1t1svds{justify-content:center;align-items:center;flex-direction:column}";
const css = {
  code: ".gridLayout.svelte-1t1svds{display:grid;grid-template-rows:1fr 0.4fr}.gridItem.svelte-1t1svds{grid-column:1}.bottomImage.svelte-1t1svds{align-self:flex-end;margin-bottom:2rem}.bottomArea.svelte-1t1svds{padding:1rem;padding-top:0;gap:1rem;flex-direction:column;align-self:flex-end;margin-bottom:1rem}.topItem.svelte-1t1svds{display:flex;align-items:center;justify-content:center}.wText.svelte-1t1svds{font-weight:400}.wSub.svelte-1t1svds{color:#838383;text-align:center;width:100%;max-width:80%}.buttonLabel.svelte-1t1svds{justify-content:center;align-items:center;flex-direction:column}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script language=\\"ts\\">\\n    import PrimaryButton from '../lib/primaryButton.svelte';\\n    import TransitionWrapper from '../lib/transitionWrapper.svelte';\\n</script>   \\n\\n<TransitionWrapper>\\n    <div class=\\"container gridLayout\\">\\n        <div class=\\"gridItem topItem\\">\\n            <img class=\\"bottomImage\\" alt=\\"minklogo\\" src=\\"/MinkLogo.svg\\"/>\\n        </div>\\n        <div class=\\"gridItem bottomArea flex\\">\\n            <div class=\\"flex buttonLabel\\">\\n                <h1 class=\\"wText\\">Welcome</h1>\\n                <p class=\\"wSub\\">Please press start to setup mink and get learning!</p>\\n            </div>\\n            <div>\\n                <PrimaryButton to={\\"/setup\\"} message={\\"Start\\"}/>\\n            </div>\\n        </div>\\n    </div>\\n</TransitionWrapper>\\n\\n<style>\\n.gridLayout {\\n    display: grid;\\n    grid-template-rows: 1fr 0.4fr;\\n}\\n\\n.gridItem {\\n    grid-column: 1;\\n}\\n\\n.bottomImage {\\n    align-self: flex-end;\\n    margin-bottom: 2rem;\\n}\\n\\n.bottomArea {\\n    padding: 1rem;\\n    padding-top: 0;\\n    gap: 1rem;\\n    flex-direction: column;\\n    align-self: flex-end;\\n    margin-bottom: 1rem;\\n}\\n\\n.topItem {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.wText {\\n    font-weight: 400;\\n}\\n\\n.wSub {\\n    color: #838383;\\n    text-align: center;\\n    width: 100%;\\n    max-width: 80%;\\n}\\n\\n.buttonLabel {\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n}\\n</style>"],"names":[],"mappings":"AAuBA,WAAW,eAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,GAAG,CAAC,KAAK,AACjC,CAAC,AAED,SAAS,eAAC,CAAC,AACP,WAAW,CAAE,CAAC,AAClB,CAAC,AAED,YAAY,eAAC,CAAC,AACV,UAAU,CAAE,QAAQ,CACpB,aAAa,CAAE,IAAI,AACvB,CAAC,AAED,WAAW,eAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,CACd,GAAG,CAAE,IAAI,CACT,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,QAAQ,CACpB,aAAa,CAAE,IAAI,AACvB,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AAC3B,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAClB,CAAC,AAED,YAAY,eAAC,CAAC,AACV,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,AAC1B,CAAC"}`
};
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `${validate_component(TransitionWrapper, "TransitionWrapper").$$render($$result, {}, {}, {
    default: () => `<div class="${"container gridLayout svelte-1t1svds"}"><div class="${"gridItem topItem svelte-1t1svds"}"><img class="${"bottomImage svelte-1t1svds"}" alt="${"minklogo"}" src="${"/MinkLogo.svg"}"></div>
        <div class="${"gridItem bottomArea flex svelte-1t1svds"}"><div class="${"flex buttonLabel svelte-1t1svds"}"><h1 class="${"wText svelte-1t1svds"}">Welcome</h1>
                <p class="${"wSub svelte-1t1svds"}">Please press start to setup mink and get learning!</p></div>
            <div>${validate_component(PrimaryButton, "PrimaryButton").$$render($$result, {to: "/setup", message: "Start"}, {}, {})}</div></div></div>`
  })}`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Routes
});
const Setup = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(TransitionWrapper, "TransitionWrapper").$$render($$result, {}, {}, {default: () => `<p>page elem</p>`})}`;
});
var setup = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Setup
});
export {init, render};
